# Issue ops
name: issue-ops

on:
  issues:
    types: [labeled]

jobs:
    issue-ops:
        if: ${{ github.event.label.name == 'repo-request' }}
        runs-on: ubuntu-latest
        permissions:
            issues: write
            contents: read
        outputs:
            REPO_NAME: ${{ steps.repo-request.outputs.REPO_NAME }}
        steps:
        - name: Issue Forms Body Parser
          id: parse
          uses: zentered/issue-forms-body-parser@v2.0.0

        - uses: actions/checkout@v4.1.1
        
        - run: |
            repo_name=$(echo '${{ steps.parse.outputs.data }}' | jq -r '.name.text')
            repo_dept=$(echo '${{ steps.parse.outputs.data }}' | jq -r '.department.text')
            repo_full_name=$repo_dept-$repo_name

            echo "REPO_NAME=$repo_full_name" >> "$GITHUB_OUTPUT"

            mention="@${{ github.event.issue.user.login }}: "
            message="Requested repository '$repo_full_name' will be sent for approval."
            exitcode=0

            # shall not be empty
            if [ -z $repo_full_name ]; then
                message="Repository name is empty.";
                exitcode=1;
            fi;                  
            
            # shall be alphanumeric and minus only
            if [[ "$repo_full_name" =~ [^\-a-zA-Z0-9] ]]; then 
                message="Repository name shall be alphanumeric and minus only.";
                exitcode=1;
            fi;
                        
            # shall not start with minus
            if [[ "$repo_full_name" == -* ]]; then
                message="Repository name shall not start with minus.";
                exitcode=1;
            fi;

            # shall not end with minus
            if [[ "$repo_full_name" == *- ]]; then
                message="Repository name shall not end with minus.";
                exitcode=1;
            fi;

            if [ $exitcode -ne 0 ]; then
                gh issue edit ${{ github.event.issue.number }} --remove-label repo-request
                message=$message" Please fix the issue and try again by applying the label 'repo-request' again to the issue.";
            fi;

            gh issue comment ${{ github.event.issue.number }} -b "$mention $message"
            exit $exitcode
          id: repo-request 
          env:
            GH_TOKEN: ${{ github.token }}

    create-repo:
        needs: issue-ops
        runs-on: ubuntu-latest
        environment: repo-creation
        permissions: {}
        steps:
            - name: Create app token
              uses: actions/create-github-app-token@v1.6.2
              id: get-workflow-token
              with:
                app-id: ${{ vars.APP_ID }}
                private-key: ${{ secrets.PRIVATE_KEY }}
                owner: ${{ github.repository_owner }}
            - name: Create repository
              env: 
                GH_TOKEN: ${{ steps.get-workflow-token.outputs.token }}
                REPO_OWNER: ${{ github.repository_owner }}
                REPO_NAME: ${{ needs.issue-ops.outputs.REPO_NAME }}
                User: ${{ github.event.issue.user.login }}
                ISSUE_NUMBER: ${{ github.event.issue.number }}
              run: |
                REPO_URL=$(gh repo create $REPO_OWNER/$REPO_NAME --private --clone)
                echo "repo_url=$REPO_URL" >> "$GITHUB_OUTPUT"
                echo "Repositeory '$REPO_NAME' has been created: $REPO_URL"
                gh issue comment ${{ github.event.issue.number }} -b "@$user: Repository '$REPO_NAME' has been created: $REPO_URL"